#define MoistureSensorPin A0 
#define TempSensorPin A6
#define RelayPin A5

#define Red 2
#define Yellow 3
#define Green 4

float sensorValue = 0;
const int RELAY_PIN = A5; 
int sensorwert;
int temperatur = 0; 
int t = 500;
int wasserstand;
int temperaturGrenzwert = 20;
int wasserstandGrenzwert = 700;





void setup() {
  Serial.begin(9600);
  pinMode(RelayPin, OUTPUT);
  pinMode(Red, OUTPUT);
  pinMode(Yellow, OUTPUT);
  pinMode(Green, OUTPUT);
  
  
  

}




// the loop function runs over and over again forever
void loop() {

//Messen
for (int i = 0; i <= 9; i++) {
    int signVal = analogRead(TempSensorPin);
    temperatur += (signVal * 5 * 100) / 1024;
    signVal = 0;
    delay(80);
  }
  temperatur = temperatur / 10;
  temperatur = temperatur * -1 + 15;


//Feuchtigkeit berechnen/messen
for (int i = 0; i <= 100; i++) 
 { 
   sensorValue = sensorValue + analogRead(MoistureSensorPin); 
   delay(1); 
 } 
 sensorValue = sensorValue/100.0; 
 
 



//LEDs
if (temperatur >= temperaturGrenzwert && sensorValue > wasserstandGrenzwert){
  digitalWrite(Green, LOW);
  digitalWrite(Red, HIGH);
  digitalWrite(Yellow, LOW);
  digitalWrite(RELAY_PIN, HIGH);
  delay(1000);
  Serial.println("red");
}

else if(
temperatur >= temperaturGrenzwert || sensorValue > wasserstandGrenzwert) {
  digitalWrite(Yellow, HIGH);
  digitalWrite(Green, LOW);
  digitalWrite(Red, LOW);
  digitalWrite(RELAY_PIN, HIGH);
  delay(1000);
  Serial.println("yellow");
}
else{
  digitalWrite(RELAY_PIN, LOW);
  digitalWrite(Yellow, LOW);
  digitalWrite(Red, LOW);
  digitalWrite(Green, HIGH);
  delay(1000);
  Serial.println("green");
}





//Ausgabe
Serial.print(temperatur); //Nun wird der Wert „temperatur“ über die serielle Kommunikation an den PC gesendet. Durch öffnen des seriellen Monitors in der Arduino-Software kann die Temperatur abgelesen werden.
Serial.println(" Grad Celsius"); // Im seriellen Monitor wird hinter der Temperatur die Einheit eingeblendet.
Serial.print("Wasserstand: ");
Serial.println(sensorValue);

  }
